{"version":3,"sources":["services/persons.js","components/Filter.js","components/Notification.js","components/PersonForm.js","components/PersonList.js","App.js","index.js"],"names":["baseUrl","axios","get","newPerson","post","person","delete","id","put","Filter","searchValue","setSearchValue","value","onChange","event","target","Notification","message","className","success","text","PersonForm","persons","setPersons","newName","setNewName","newNumber","setNewNumber","setMessage","onSubmit","preventDefault","name","number","personWithName","find","undefined","window","confirm","personsService","map","setTimeout","then","response","console","log","concat","data","catch","error","errorData","type","PersonList","shownPersons","onClick","newPersons","filter","p","deletePerson","App","useState","useEffect","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.90b18c28.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = \"/api/persons\"\n\nconst getAll = () => \n    axios.get(baseUrl)\n\nconst create = newPerson =>\n    axios.post(baseUrl, newPerson)\n\nconst remove = person =>\n    axios.delete(`${baseUrl}/${person.id}`)\n\nconst update = (id, newPerson) =>\n    axios.put(`${baseUrl}/${id}`, newPerson)\n\nexport default {\n    getAll,\n    create,\n    remove,\n    update\n}\n","import React from 'react'\n\nconst Filter = ({ searchValue, setSearchValue }) => {\n    function onSearchByName(event) {\n        setSearchValue(event.target.value)\n    }\n\n    return (\n        <div>\n            filter shown with <input value={searchValue} onChange={onSearchByName} />\n        </div>\n    )\n}\n\nexport default Filter\n","import React from 'react'\n\nconst Notification = ({ message }) => {\n    \n    return message === null\n        ? null\n        : <div className={`notification ${!message.success ? \"error\" : \"\"}`}>{message.text}</div>\n}\n\nexport default Notification\n","import React from 'react'\n\nimport personsService from '../services/persons'\n\nconst PersonForm = ({persons, setPersons, newName, setNewName, newNumber, setNewNumber, setMessage }) => {\n    function onSubmitName(event) {\n        event.preventDefault()\n\n        const newPerson = { name: newName, number: newNumber }\n\n        // Check if the name already exists\n        const personWithName = \n            persons.find(person => person.name === newPerson.name)\n        if (personWithName !== undefined) {\n            // Modify phone number\n            if (window.confirm(`${newPerson.name} is already added to the phonebook, replace the old number with a new one?`)) {\n                personsService.update(personWithName.id, newPerson)\n                setPersons(persons.map(person => \n                    person.id === personWithName.id\n                    ? {...person, number: newPerson.number}\n                    : person\n                ))\n                setMessage({text: `Modified ${newPerson.name}'s number`, success: true})\n                setTimeout(() => {\n                    setMessage(null)\n                }, 5000)\n                setNewName(\"\")\n                setNewNumber(\"\")\n            }\n        } else {\n            // Add person\n             personsService\n                .create(newPerson)\n                .then((response) => {\n                    console.log(response)\n                    setPersons(persons.concat(response.data))\n                    setMessage({text: `Added ${newPerson.name}`, success: true})\n                    setTimeout(() => {\n                        setMessage(null)\n                    }, 5000)\n                    setNewName(\"\")\n                    setNewNumber(\"\")\n                })\n                .catch(error => {\n                    const errorData = error.response.data;\n                    setMessage({\n                        success: false,\n                        text: `Person validation failed: ${errorData.error}`\n                    })\n                    console.log(error)\n                })\n        }\n    }\n\n    return (\n        <form onSubmit={onSubmitName}>\n            <div>\n                name: <input value={newName} onChange={(event) => setNewName(event.target.value)} />\n            </div>\n            <div>\n                number: <input value={newNumber} onChange={(event) => setNewNumber(event.target.value)} />\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\nexport default PersonForm\n","import React from 'react'\n\nimport personsService from '../services/persons'\n\nconst PersonList = ({ persons, setPersons, shownPersons, setMessage }) => {\n    const deletePerson = person => {\n        if (window.confirm(`Delete ${person.name}`))\n            personsService\n                .remove(person)\n                .catch(() => setMessage(\n                    {\n                        text: `Information of ${person.name} has already been removed from the server`,\n                        success: false\n                    }\n                ))\n        const newPersons = persons.filter(p => p.id !== person.id)\n        setPersons(newPersons)\n    }\n\n    return (\n        <div>\n            { \n                shownPersons.map((person) =>\n                    <div key={person.name}>\n                        {person.name} {person.number}\n                        <button onClick={() => {deletePerson(person)}}>delete</button>\n                    </div>\n                )\n            }\n        </div>\n    )\n}\n\nexport default PersonList\n","import React, { useState, useEffect } from 'react'\n\nimport personsService from './services/persons'\n\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\nimport PersonForm from './components/PersonForm'\nimport PersonList from './components/PersonList'\n\n\nconst App = () => {\n    const [ searchValue, setSearchValue ] = useState(\"\")\n    const [ persons, setPersons ] = useState([]) \n    const [ newName, setNewName ] = useState(\"\")\n    const [ newNumber, setNewNumber ] = useState(\"\")\n    const [ message, setMessage ] = useState(null)\n\n    const getPersonsToShow = () => searchValue === \"\"\n        ? persons\n        : persons.filter((person) => person.name.toLowerCase().includes(searchValue.toLowerCase()))\n\n    useEffect(() => {\n        personsService\n            .getAll()\n            .then( response => setPersons(response.data))\n    }, []);\n    \n    return (\n        <div>\n            <h1>Phonebook</h1>\n            <Notification message={message} />\n            <Filter searchValue={searchValue} setSearchValue={setSearchValue} />\n            <h2>add a new</h2>\n            <PersonForm\n                persons={persons}\n                setPersons={setPersons}\n                newName={newName}\n                setNewName={setNewName}\n                newNumber={newNumber}\n                setNewNumber={setNewNumber} \n                setMessage={setMessage}\n            />\n            <h2>Numbers</h2>\n            <PersonList\n                persons={persons}\n                setPersons={setPersons}\n                shownPersons={getPersonsToShow()}\n                setMessage={setMessage}\n            />\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nimport './index.css'\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n)\n\n"],"sourceRoot":""}